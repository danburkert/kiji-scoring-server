package org.kiji.scoring.server

class ScoringServletConfiguration {

}

object ScoringServletConfiguration {


  val Template =
    """
      |<?xml version="1.0" encoding="ISO-8859-1" ?>
      |<!--
      | * (c) Copyright 2013 WibiData, Inc.
      | *
      | * See the NOTICE file distributed with this work for additional
      | * information regarding copyright ownership.
      | *
      | * Licensed under the Apache License, Version 2.0 (the "License");
      | * you may not use this file except in compliance with the License.
      | * You may obtain a copy of the License at
      | *
      | *     http://www.apache.org/licenses/LICENSE-2.0
      | *
      | * Unless required by applicable law or agreed to in writing, software
      | * distributed under the License is distributed on an "AS IS" BASIS,
      | * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      | * See the License for the specific language governing permissions and
      | * limitations under the License.
      |-->
      |
      |<!--
      |  NOTE: This file is autogenerated. Please do not modify.
      |
      |  Contains the web application configuration for the individual scoring instance. This
      |  relies on a generic scoring servlet and parameterizes this with information so that this
      |  servlet
      |  can retrieve environment/definition configuration from the model repository.
      | -->
      |
      |<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
      |xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      |xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun
      |.com/xml/ns/j2ee/web-app_2_4.xsd"
      |version="2.4">
      |
      |  <display-name>%s</display-name>
      |  <description>Dynamically generated scoring application.</description>
      |
      |  <servlet>
      |    <servlet-name>%s</servlet-name>
      |    <servlet-class>org.kiji.scoring.server.servlets.GenericScoringServlet</servlet-class>
      |    %s
      |    <load-on-startup>1</load-on-startup>
      |  </servlet>
      |
      |  <servlet-mapping>
      |    <servlet-name>%s</servlet-name>
      |    <url-pattern>/</url-pattern>
      |  </servlet-mapping>
      |</web-app>
      |
    """.stripMargin

  val ParamTemplate =
    """
      |    <init-param>
      |      <param-name>%s</param-name>
      |      <param-value>%s</param-value>
      |    </init-param>
    """.stripMargin

  def generateParam(name: String, value: String): String = ParamTemplate.format(name, value)

  def generateServletConfig(modelName: String, params: Map[String, String]): String = {

    Template.format(modelName, modelName, params.map((generateParam _).tupled).mkString(""), modelName)

  }

  def main(args: Array[String]) = {
    println(generateServletConfig("my-model-name", Map("foo" -> "bar")))
  }


}
